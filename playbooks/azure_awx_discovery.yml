---
- name: Azure Resource Discovery para AWX (sin Azure CLI)
  hosts: localhost
  gather_facts: yes
  vars:
    output_dir: "/tmp"
    timestamp: "{{ ansible_date_time.epoch }}"
  
  tasks:
    - name: Verificar disponibilidad de colecciones Azure
      debug:
        msg: "Iniciando descubrimiento Azure usando colecciones nativas de Ansible..."
    
    # Obtener informaci√≥n de suscripciones (requiere credenciales Azure)
    - name: Intentar obtener informaci√≥n de suscripciones
      azure.azcollection.azure_rm_subscription_info:
      register: azure_subscriptions
      ignore_errors: yes
      
    - name: Mostrar estado de autenticaci√≥n Azure
      debug:
        msg: |
          {% if azure_subscriptions is succeeded %}
          ‚úÖ Autenticaci√≥n Azure: EXITOSA
          üìä Suscripciones encontradas: {{ azure_subscriptions.subscriptions | length }}
          {% else %}
          ‚ùå Autenticaci√≥n Azure: FALLIDA
          üí° Necesitas configurar credenciales de Azure en AWX
          {% endif %}
      
    # Si no hay credenciales, usar datos simulados realistas
    - name: Usar datos simulados si no hay credenciales Azure
      set_fact:
        simulated_mode: true
        simulated_subscription:
          id: "63865ee1-f50c-40f1-a801-e7332d136dec"
          name: "Microsoft Partner Network - 12k"
          tenantId: "10123fe2-7f32-469c-832a-f0dbd5d898f5"
        simulated_resource_groups:
          - name: "test-vd"
            location: "westeurope"
            id: "/subscriptions/63865ee1-f50c-40f1-a801-e7332d136dec/resourceGroups/test-vd"
          - name: "bt-aks-rg"
            location: "northeurope"
            id: "/subscriptions/63865ee1-f50c-40f1-a801-e7332d136dec/resourceGroups/bt-aks-rg"
          - name: "SEG2-testing"
            location: "westeurope"
            id: "/subscriptions/63865ee1-f50c-40f1-a801-e7332d136dec/resourceGroups/SEG2-testing"
        simulated_storage_accounts:
          - name: "cs21003200112388e59"
            resourceGroup: "cloud-shell-storage-eastus"
            location: "eastus"
            sku: { name: "Standard_LRS" }
          - name: "nlgpromconfig"
            resourceGroup: "SEG2-registry"
            location: "eastus2"
            sku: { name: "Standard_LRS" }
        simulated_vms:
          - name: "vm-web-prod-01"
            resourceGroup: "test-vd"
            location: "westeurope"
            vmSize: "Standard_D2s_v3"
            osType: "Linux"
            powerState: "running"
            privateIp: "10.0.1.10"
            publicIp: "52.174.34.95"
          - name: "vm-db-prod-01"
            resourceGroup: "test-vd"
            location: "westeurope"
            vmSize: "Standard_D4s_v3"
            osType: "Linux"
            powerState: "running"
            privateIp: "10.0.1.11"
            publicIp: null
      when: azure_subscriptions is failed
    
    # Procesar datos reales o simulados
    - name: Procesar informaci√≥n de Azure (real o simulada)
      set_fact:
        discovery_summary:
          timestamp: "{{ ansible_date_time.iso8601 }}"
          mode: "{{ 'real' if azure_subscriptions is succeeded else 'simulated' }}"
          subscription_name: "{{ azure_subscriptions.subscriptions[0].display_name if azure_subscriptions is succeeded else simulated_subscription.name }}"
          subscription_id: "{{ azure_subscriptions.subscriptions[0].subscription_id if azure_subscriptions is succeeded else simulated_subscription.id }}"
          resource_groups_count: "{{ azure_subscriptions.subscriptions[0].resource_groups | default([]) | length if azure_subscriptions is succeeded else simulated_resource_groups | length }}"
          virtual_machines_count: "{{ 0 if azure_subscriptions is succeeded else simulated_vms | length }}"
          storage_accounts_count: "{{ 0 if azure_subscriptions is succeeded else simulated_storage_accounts | length }}"
    
    - name: Intentar obtener Resource Groups (solo con credenciales)
      azure.azcollection.azure_rm_resourcegroup_info:
      register: azure_resource_groups
      ignore_errors: yes
      when: azure_subscriptions is succeeded
    
    - name: Intentar obtener Virtual Machines (solo con credenciales)
      azure.azcollection.azure_rm_virtualmachine_info:
      register: azure_vms
      ignore_errors: yes
      when: azure_subscriptions is succeeded
    
    - name: Intentar obtener Storage Accounts (solo con credenciales)
      azure.azcollection.azure_rm_storageaccount_info:
      register: azure_storage_accounts
      ignore_errors: yes
      when: azure_subscriptions is succeeded
    
    - name: Mostrar resumen del descubrimiento
      debug:
        msg: |
          === DESCUBRIMIENTO AZURE DESDE AWX ===
          üîß Modo: {{ discovery_summary.mode | upper }}
          üìä Suscripci√≥n: {{ discovery_summary.subscription_name }}
          üìÅ Resource Groups: {{ discovery_summary.resource_groups_count }}
          üñ•Ô∏è  Virtual Machines: {{ discovery_summary.virtual_machines_count }}
          üíæ Storage Accounts: {{ discovery_summary.storage_accounts_count }}
          
          ‚è∞ Ejecutado desde: AWX/Kubernetes
          üìÖ Timestamp: {{ discovery_summary.timestamp }}
          
          {% if discovery_summary.mode == 'simulated' %}
          üí° MODO SIMULADO: Configura credenciales Azure en AWX para datos reales
          {% else %}
          ‚úÖ MODO REAL: Usando credenciales Azure configuradas
          {% endif %}
    
    - name: Generar inventario din√°mico AWX
      template:
        src: ../templates/azure_awx_inventory.j2
        dest: "{{ output_dir }}/azure_awx_inventory_{{ timestamp }}.ini"
      vars:
        mode: "{{ discovery_summary.mode }}"
        subscription: "{{ discovery_summary.subscription_name }}"
        real_vms: "{{ azure_vms.vms | default([]) }}"
        real_rgs: "{{ azure_resource_groups.resourcegroups | default([]) }}"
        sim_vms: "{{ simulated_vms | default([]) }}"
        sim_rgs: "{{ simulated_resource_groups | default([]) }}"
      delegate_to: localhost
    
    - name: Crear reporte JSON completo
      copy:
        content: |
          {
            "discovery_method": "awx_ansible_azure_collections",
            "mode": "{{ discovery_summary.mode }}",
            "summary": {{ discovery_summary | to_nice_json }},
            "awx_environment": {
              "ansible_version": "{{ ansible_version.full }}",
              "python_version": "{{ ansible_python_version }}",
              "platform": "{{ ansible_system }}"
            },
            {% if azure_subscriptions is succeeded %}
            "real_data": {
              "subscriptions": {{ azure_subscriptions.subscriptions | default([]) | to_nice_json }},
              "resource_groups": {{ azure_resource_groups.resourcegroups | default([]) | to_nice_json }},
              "virtual_machines": {{ azure_vms.vms | default([]) | to_nice_json }},
              "storage_accounts": {{ azure_storage_accounts.storageaccounts | default([]) | to_nice_json }}
            }
            {% else %}
            "simulated_data": {
              "subscription": {{ simulated_subscription | to_nice_json }},
              "resource_groups": {{ simulated_resource_groups | to_nice_json }},
              "virtual_machines": {{ simulated_vms | to_nice_json }},
              "storage_accounts": {{ simulated_storage_accounts | to_nice_json }}
            }
            {% endif %}
          }
        dest: "{{ output_dir }}/azure_awx_discovery_{{ timestamp }}.json"
    
    - name: Mostrar archivos generados y pr√≥ximos pasos
      debug:
        msg: |
          üìÅ ARCHIVOS GENERADOS EN AWX:
          
          üìã Inventario: {{ output_dir }}/azure_awx_inventory_{{ timestamp }}.ini
          üìä Reporte JSON: {{ output_dir }}/azure_awx_discovery_{{ timestamp }}.json
          
          {% if discovery_summary.mode == 'simulated' %}
          üîß PR√ìXIMOS PASOS PARA DATOS REALES:
          1. Ve a AWX ‚Üí Credentials ‚Üí Add
          2. Tipo: "Microsoft Azure Resource Manager"
          3. Completa: Subscription ID, Client ID, Client Secret, Tenant ID
          4. Asocia las credenciales a este Job Template
          5. Re-ejecuta para obtener datos reales
          {% else %}
          ‚úÖ CONFIGURACI√ìN COMPLETA
          üîÑ Programa este job para ejecuci√≥n autom√°tica
          üìà Los datos se actualizar√°n peri√≥dicamente
          {% endif %}
          
          üí° Este playbook funciona 100% en AWX/Kubernetes sin Azure CLI